library(quantmod)
library(TSA)
library(car)
library(tseries)
library(tidyverse)
knitr::opts_chunk$set(
echo=FALSE,
message=FALSE,
warning=FALSE,
echo=FALSE,
root.dir='/Users/noahkawasaki/Desktop/ECON 147/Homework 5'
)
symbols = c("MSFT", "^GSPC")
getSymbols(symbols, from ="2000-01-03", to = "2014-02-21")
# check data
colnames(MSFT)
start(MSFT)
end(MSFT)
# extract adjusted closing prices
MSFT <- MSFT[, "MSFT.Adjusted", drop=F]
GSPC <- GSPC[, "GSPC.Adjusted", drop=F]
# Calculate log-returns for GARCH analysis
MSFT.ret = CalculateReturns(MSFT, method="compound")
GSPC.ret = CalculateReturns(GSPC, method="compound")
head(MSFT.ret)
# remove default column header which is treated as the first observation
MSFT.ret = MSFT.ret[-1,]
GSPC.ret = GSPC.ret[-1,]
# Remove default column header which is treated as the first observation
MSFT.ret <- MSFT.ret[-1,]
# Rename column
colnames(MSFT.ret) <- "MSFT"
colnames(GSPC.ret) <- "GSPC"
# Extract adjusted closing prices
MSFT <- MSFT[, "MSFT.Adjusted", drop=FALSE]
GSPC <- GSPC[, "GSPC.Adjusted", drop=FALSE]
# Calculate log-returns for GARCH analysis
MSFT.ret <- CalculateReturns(MSFT, method="compound")
GSPC.ret <- CalculateReturns(GSPC, method="compound")
# Remove default column header which is treated as the first observation
MSFT.ret <- MSFT.ret[-1,]
GSPC.ret <- GSPC.ret[-1,]
# Rename column
colnames(MSFT.ret) <- "MSFT"
colnames(GSPC.ret) <- "GSPC"
MSFT.ret
class(MSFT.ret)
# Plot returns
plot(MSFT.ret, main="Microsfot Daily Returns")
plot(GSPC.ret, main="S&P500 Daily Returns")
# Plot returns
plot(MSFT.ret, main="Microsfot Daily Returns", color="blue")
plot(GSPC.ret, main="S&P500 Daily Returns", color="red")
plot(GSPC.ret, main="S&P500 Daily Returns")
# Plot returns
plot(MSFT.ret, main="Microsfot Daily Returns")
# Microsoft
par(mfrow=c(2,2))
plot(MSFT.ret, main="MSFT daily returns")
acf(MSFT.ret, main="ACF", lwd=2)
plot(density(MSFT.ret),type="l", main="Smoothed density", xlab="daily returns", ylab="density estimate", col="slateblue1")
qqnorm(MSFT.ret, col="slateblue1")
qqline(MSFT.ret)
par(mfrow=c(1,1))
knitr::opts_chunk$set(
echo=FALSE,
message=FALSE,
warning=FALSE,
echo=FALSE,
root.dir='/Users/noahkawasaki/Desktop/ECON 147/Homework 5'
)
library(PerformanceAnalytics)
library(quantmod)
library(TSA)
library(car)
library(tseries)
library(tidyverse)
symbols <- c("MSFT", "^GSPC")
getSymbols(symbols, from ="2000-01-03", to = "2014-02-21")
# Extract adjusted closing prices
MSFT <- MSFT[, "MSFT.Adjusted", drop=FALSE]
GSPC <- GSPC[, "GSPC.Adjusted", drop=FALSE]
# Calculate log-returns for GARCH analysis
MSFT.ret <- CalculateReturns(MSFT, method="compound")
GSPC.ret <- CalculateReturns(GSPC, method="compound")
# Remove default column header which is treated as the first observation
MSFT.ret <- MSFT.ret[-1,]
GSPC.ret <- GSPC.ret[-1,]
# Rename column
colnames(MSFT.ret) <- "MSFT"
colnames(GSPC.ret) <- "GSPC"
# Plot returns
plot(MSFT.ret, main="Microsfot Daily Returns")
plot(GSPC.ret, main="S&P500 Daily Returns")
# Microsoft
par(mfrow=c(2,2))
plot(MSFT.ret, main="MSFT daily returns")
acf(MSFT.ret, main="ACF", lwd=2)
plot(density(MSFT.ret),type="l", main="Smoothed density", xlab="daily returns", ylab="density estimate", col="slateblue1")
qqnorm(MSFT.ret, col="slateblue1")
qqline(MSFT.ret)
par(mfrow=c(1,1))
par(mfrow=c(2,2))
plot(GSPC.ret, main="SP500 daily returns")
acf(GSPC.ret, main="ACF", lwd=2)
plot(density(GSPC.ret),type="l", main="Smoothed density", xlab="daily returns", ylab="density estimate", col="slateblue1")
qqnorm(GSPC.ret, col="slateblue1")
qqline(GSPC.ret)
par(mfrow=c(1,1))
jarque.bera.test(MSFT.ret)
jarque.bera.test(GSPC.ret)
summary(garch_AP)
# GARCH(1,1) on MSFT
garch_AP  <- garch(MSFT.ret, order = c(1,1))
n  = dim(MSFT.ret)[1]
n0 = n-1
summary(garch_AP)
attach(garch_AP)
omega_est  = coef[1]                   # estimator of omega
sd_omega   = vcov[1,1]^.5              # standard deviation estimator of the estimator of omega
alpha1_est = coef[2]                   # estimator of alpha1
sd_alpha1  = vcov[2,2]^.5              # standard deviation estimator of the estimator of alpha1
beta1_est  = coef[3]                   # estimator of beta1
sd_beta1   = vcov[3,3]^.5              # standard deviation estimator of the estimator of beta1
sig        = fitted.values[2:n0,c(1)]  # fitted conditioinal standard deviation sigma_t
rsd        = residuals[2:n0]           # fitted residuals for e_t
fit.r      = sig*rsd                   # fitted cc return for r_t
n1         = n0-1
date       = 1:n1
date_i     = seq(from = 1, to = n0, by = 250)
lab_x      = seq(from = 2000, to = 2014, by = 1)
garch_MSFT  <- garch(MSFT.ret, order = c(1,1))
n_MSFT  = dim(MSFT.ret)[1]
n0_MSFT = n-1
summary(garch_MSFT)
attach(garch_MSFT)
omega_est_MSFT  = coef[1]                   # estimator of omega
sd_omega_MSFT   = vcov[1,1]^.5              # standard deviation estimator of the estimator of omega
alpha1_est_MSFT = coef[2]                   # estimator of alpha1
sd_alpha1_MSFT  = vcov[2,2]^.5              # standard deviation estimator of the estimator of alpha1
beta1_est_MSFT  = coef[3]                   # estimator of beta1
sd_beta1_MSFT   = vcov[3,3]^.5              # standard deviation estimator of the estimator of beta1
sig_MSFT        = fitted.values[2:n0,c(1)]  # fitted conditioinal standard deviation sigma_t
rsd_MSFT        = residuals[2:n0]           # fitted residuals for e_t
fit.r_MSFT      = sig*rsd                   # fitted cc return for r_t
n1_MSFT         = n0-1
date_MSFT       = 1:n1
date_i_MSFT     = seq(from = 1, to = n0, by = 250)
lab_x_MSFT      = seq(from = 2000, to = 2014, by = 1)
# GARCH(1,1) with GSPC
garch_SP  <- garch(GSPC.ret, order = c(1,1))
# GARCH(1,1) with GSPC
garch_SP  <- garch(GSPC.ret, order = c(1,1))
n_SP  = dim(MSFT.ret)[1]
n0_SP = n-1
summary(garch_SP)
attach(garch_SP)
omega_est_SP  = coef[1]                   # estimator of omega
sd_omega_SP   = vcov[1,1]^.5              # standard deviation estimator of the estimator of omega
alpha1_est_SP = coef[2]                   # estimator of alpha1
sd_alpha1_SP  = vcov[2,2]^.5              # standard deviation estimator of the estimator of alpha1
beta1_est_SP  = coef[3]                   # estimator of beta1
sd_beta1_SP   = vcov[3,3]^.5              # standard deviation estimator of the estimator of beta1
sig_SP        = fitted.values[2:n0,c(1)]  # fitted conditioinal standard deviation sigma_t
rsd_SP        = residuals[2:n0]           # fitted residuals for e_t
fit.r_SP      = sig*rsd                   # fitted cc return for r_t
n1_SP         = n0-1
date_SP       = 1:n1
date_i_SP     = seq(from = 1, to = n0, by = 250)
lab_x_SP      = seq(from = 2000, to = 2014, by = 1)
# MSFT
par(mfrow=c(2,1))
par(mar = c(3,4.5,1.5,2))
plot(date_MSFT, MSFT.ret[3:n], type='l',col='blue',xaxt = 'n', xlab= "",ylab="", xlim=c(1,n1), ylim=c(-.15,.15))
axis(1, at=date_i_MSFT, labels=lab_x_MSFT)
title('Real Data (MSFT)')
plot(date_MSFT, fit.r_MSFT, type='l',col='green',xaxt = 'n', xlab= "",ylab="", xlim=c(1,n1), ylim=c(-.15,.15))
axis(1, at=date_i_MSFT, labels=lab_x_MSFT)
title('Fitted Data (MSFT)')
# SP500
par(mfrow=c(2,1))
par(mar = c(3,4.5,1.5,2))
plot(date_SP, GSPC.ret[3:n], type='l', col='blue',xaxt='n', xlab="", ylab="", xlim=c(1,n1), ylim=c(-.1,.1))
axis(1, at=date_i_SP, labels=lab_x_SP)
title('Real Data (GSPC)')
plot(date_SP, fit.r_SP, type='l', col='green', xaxt='n', xlab="", ylab="", xlim=c(1,n1), ylim=c(-.1,.1))
axis(1, at=date_i_SP, labels=lab_x_SP)
title('Fitted Data (GSPC)')
# GARCH(1,1) with GSPC
garch_SP  <- garch(GSPC.ret, order = c(1,1))
n_SP  = dim(MSFT.ret)[1]
n0_SP = n-1
summary(garch_SP)
attach(garch_SP)
omega_est_SP  = coef[1]                   # estimator of omega
sd_omega_SP   = vcov[1,1]^.5              # standard deviation estimator of the estimator of omega
alpha1_est_SP = coef[2]                   # estimator of alpha1
sd_alpha1_SP  = vcov[2,2]^.5              # standard deviation estimator of the estimator of alpha1
beta1_est_SP  = coef[3]                   # estimator of beta1
sd_beta1_SP   = vcov[3,3]^.5              # standard deviation estimator of the estimator of beta1
sig_SP        = fitted.values[2:n0,c(1)]  # fitted conditioinal standard deviation sigma_t
rsd_SP        = residuals[2:n0]           # fitted residuals for e_t
fit.r_SP      = sig*rsd                   # fitted cc return for r_t
n1_SP         = n0-1
date_SP       = 1:n1
date_i_SP     = seq(from = 1, to = n0, by = 250)
lab_x_SP      = seq(from = 2000, to = 2014, by = 1)
```{r, echo=FALSE, results='hide}
# GARCH(1,1) with GSPC
garch_SP  <- garch(GSPC.ret, order = c(1,1))
n_SP  = dim(MSFT.ret)[1]
n0_SP = n-1
summary(garch_SP)
attach(garch_SP)
omega_est_SP  = coef[1]                   # estimator of omega
sd_omega_SP   = vcov[1,1]^.5              # standard deviation estimator of the estimator of omega
alpha1_est_SP = coef[2]                   # estimator of alpha1
sd_alpha1_SP  = vcov[2,2]^.5              # standard deviation estimator of the estimator of alpha1
beta1_est_SP  = coef[3]                   # estimator of beta1
sd_beta1_SP   = vcov[3,3]^.5              # standard deviation estimator of the estimator of beta1
sig_SP        = fitted.values[2:n0,c(1)]  # fitted conditioinal standard deviation sigma_t
rsd_SP        = residuals[2:n0]           # fitted residuals for e_t
fit.r_SP      = sig*rsd                   # fitted cc return for r_t
n1_SP         = n0-1
date_SP       = 1:n1
date_i_SP     = seq(from = 1, to = n0, by = 250)
lab_x_SP      = seq(from = 2000, to = 2014, by = 1)
garch_SP  <- garch(GSPC.ret, order = c(1,1))
n_SP  = dim(MSFT.ret)[1]
n0_SP = n-1
summary(garch_SP)
attach(garch_SP)
omega_est_SP  = coef[1]                   # estimator of omega
sd_omega_SP   = vcov[1,1]^.5              # standard deviation estimator of the estimator of omega
alpha1_est_SP = coef[2]                   # estimator of alpha1
sd_alpha1_SP  = vcov[2,2]^.5              # standard deviation estimator of the estimator of alpha1
beta1_est_SP  = coef[3]                   # estimator of beta1
sd_beta1_SP   = vcov[3,3]^.5              # standard deviation estimator of the estimator of beta1
sig_SP        = fitted.values[2:n0,c(1)]  # fitted conditioinal standard deviation sigma_t
rsd_SP        = residuals[2:n0]           # fitted residuals for e_t
fit.r_SP      = sig*rsd                   # fitted cc return for r_t
n1_SP         = n0-1
date_SP       = 1:n1
date_i_SP     = seq(from = 1, to = n0, by = 250)
lab_x_SP      = seq(from = 2000, to = 2014, by = 1)
```{r, message=FALSE}
```{r, message=FALSE}
garch_SP  <- garch(GSPC.ret, order = c(1,1))
n_SP  = dim(MSFT.ret)[1]
n0_SP = n-1
summary(garch_SP)
attach(garch_SP)
omega_est_SP  = coef[1]                   # estimator of omega
sd_omega_SP   = vcov[1,1]^.5              # standard deviation estimator of the estimator of omega
alpha1_est_SP = coef[2]                   # estimator of alpha1
sd_alpha1_SP  = vcov[2,2]^.5              # standard deviation estimator of the estimator of alpha1
beta1_est_SP  = coef[3]                   # estimator of beta1
sd_beta1_SP   = vcov[3,3]^.5              # standard deviation estimator of the estimator of beta1
sig_SP        = fitted.values[2:n0,c(1)]  # fitted conditioinal standard deviation sigma_t
rsd_SP        = residuals[2:n0]           # fitted residuals for e_t
fit.r_SP      = sig*rsd                   # fitted cc return for r_t
n1_SP         = n0-1
date_SP       = 1:n1
date_i_SP     = seq(from = 1, to = n0, by = 250)
lab_x_SP      = seq(from = 2000, to = 2014, by = 1)
garch_SP  <- garch(GSPC.ret, order = c(1,1))
n_SP  = dim(MSFT.ret)[1]
n0_SP = n-1
summary(garch_SP)
attach(garch_SP)
omega_est_SP  = coef[1]                   # estimator of omega
sd_omega_SP   = vcov[1,1]^.5              # standard deviation estimator of the estimator of omega
alpha1_est_SP = coef[2]                   # estimator of alpha1
sd_alpha1_SP  = vcov[2,2]^.5              # standard deviation estimator of the estimator of alpha1
beta1_est_SP  = coef[3]                   # estimator of beta1
sd_beta1_SP   = vcov[3,3]^.5              # standard deviation estimator of the estimator of beta1
sig_SP        = fitted.values[2:n0,c(1)]  # fitted conditioinal standard deviation sigma_t
rsd_SP        = residuals[2:n0]           # fitted residuals for e_t
fit.r_SP      = sig*rsd                   # fitted cc return for r_t
n1_SP         = n0-1
date_SP       = 1:n1
date_i_SP     = seq(from = 1, to = n0, by = 250)
lab_x_SP      = seq(from = 2000, to = 2014, by = 1)
# GARCH(1,1) with GSPC
garch_SP  <- garch(GSPC.ret, order = c(1,1))
n_SP  = dim(MSFT.ret)[1]
n0_SP = n-1
summary(garch_SP)
attach(garch_SP)
omega_est_SP  = coef[1]                   # estimator of omega
sd_omega_SP   = vcov[1,1]^.5              # standard deviation estimator of the estimator of omega
alpha1_est_SP = coef[2]                   # estimator of alpha1
sd_alpha1_SP  = vcov[2,2]^.5              # standard deviation estimator of the estimator of alpha1
beta1_est_SP  = coef[3]                   # estimator of beta1
sd_beta1_SP   = vcov[3,3]^.5              # standard deviation estimator of the estimator of beta1
sig_SP        = fitted.values[2:n0,c(1)]  # fitted conditioinal standard deviation sigma_t
rsd_SP        = residuals[2:n0]           # fitted residuals for e_t
fit.r_SP      = sig*rsd                   # fitted cc return for r_t
n1_SP         = n0-1
date_SP       = 1:n1
date_i_SP     = seq(from = 1, to = n0, by = 250)
lab_x_SP      = seq(from = 2000, to = 2014, by = 1)
garch_MSFT  <- garch(MSFT.ret, order = c(1,1))
n_MSFT  = dim(MSFT.ret)[1]
n0_MSFT = n-1
# GARCH(1,1) on MSFT
garch_MSFT  <- garch(MSFT.ret, order = c(1,1))
n_MSFT  = dim(MSFT.ret)[1]
n0_MSFT = n-1
# MSFT
par(mfrow=c(2,1))
par(mar = c(3,4.5,1.5,2))
plot(date_MSFT, MSFT.ret[3:n], type='l',col='blue',xaxt = 'n', xlab= "",ylab="", xlim=c(1,n1), ylim=c(-.15,.15))
axis(1, at=date_i_MSFT, labels=lab_x_MSFT)
title('Real Data (MSFT)')
plot(date_MSFT, fit.r_MSFT, type='l',col='green',xaxt = 'n', xlab= "",ylab="", xlim=c(1,n1), ylim=c(-.15,.15))
axis(1, at=date_i_MSFT, labels=lab_x_MSFT)
title('Fitted Data (MSFT)')
# GARCH(1,1) with GSPC
garch_SP  <- garch(GSPC.ret, order = c(1,1))
n_SP  = dim(MSFT.ret)[1]
n0_SP = n_SP-1
summary(garch_SP)
attach(garch_SP)
omega_est_SP  = coef[1]                   # estimator of omega
sd_omega_SP   = vcov[1,1]^.5              # standard deviation estimator of the estimator of omega
alpha1_est_SP = coef[2]                   # estimator of alpha1
sd_alpha1_SP  = vcov[2,2]^.5              # standard deviation estimator of the estimator of alpha1
beta1_est_SP  = coef[3]                   # estimator of beta1
sd_beta1_SP   = vcov[3,3]^.5              # standard deviation estimator of the estimator of beta1
sig_SP        = fitted.values[2:n0_SP,c(1)]  # fitted conditioinal standard deviation sigma_t
rsd_SP        = residuals[2:n0_SP]           # fitted residuals for e_t
fit.r_SP      = sig_SP*rsd_SP                   # fitted cc return for r_t
n1_SP         = n0_SP-1
date_SP       = 1:n1_SP
date_i_SP     = seq(from = 1, to = n0_SP, by = 250)
lab_x_SP      = seq(from = 2000, to = 2014, by = 1)
# MSFT
par(mfrow=c(2,1))
par(mar = c(3,4.5,1.5,2))
plot(date_MSFT, MSFT.ret[3:n], type='l',col='blue',xaxt = 'n', xlab= "",ylab="", xlim=c(1,n1), ylim=c(-.15,.15))
axis(1, at=date_i_MSFT, labels=lab_x_MSFT)
title('Real Data (MSFT)')
plot(date_MSFT, fit.r_MSFT, type='l',col='green',xaxt = 'n', xlab= "",ylab="", xlim=c(1,n1), ylim=c(-.15,.15))
axis(1, at=date_i_MSFT, labels=lab_x_MSFT)
title('Fitted Data (MSFT)')
par(mfrow=c(2,1))
par(mar = c(3,4.5,1.5,2))
plot(date_SP, GSPC.ret[3:n], type='l', col='blue',xaxt='n', xlab="", ylab="", xlim=c(1,n1), ylim=c(-.1,.1))
axis(1, at=date_i_SP, labels=lab_x_SP)
title('Real Data (GSPC)')
plot(date_SP, fit.r_SP, type='l', col='green', xaxt='n', xlab="", ylab="", xlim=c(1,n1), ylim=c(-.1,.1))
axis(1, at=date_i_SP, labels=lab_x_SP)
title('Fitted Data (GSPC)')
garch_SP  <- garch(GSPC.ret, order = c(1,1))
n_SP  = dim(MSFT.ret)[1]
n0_SP = n_SP-1
```{r, results="hide'}
garch_SP  <- garch(GSPC.ret, order = c(1,1))
n_SP  = dim(MSFT.ret)[1]
n0_SP = n_SP-1
garch_SP  <- garch(GSPC.ret, order = c(1,1))
n_SP  = dim(MSFT.ret)[1]
n0_SP = n_SP-1
summary(garch_MSFT)
summary(garch_SP)
par(mfrow=c(2,1))
par(mar = c(3,4.5,1.5,2))
plot(date, MSFT.ret[3:n], type='l',col='blue',xaxt = 'n', xlab= "",ylab="", xlim=c(1,n1), ylim=c(-.15,.15))
axis(1, at=date_i, labels=lab_x)
title('Real Data (MSFT)')
plot(date,fit.r, type='l',col='green',xaxt = 'n', xlab= "",ylab="", xlim=c(1,n1), ylim=c(-.15,.15))
axis(1, at=date_i, labels=lab_x)
title('Fitted Data (MSFT)')
source('~/.active-rstudio-document', echo=TRUE)
# MSFT
par(mfrow=c(2,1))
par(mar = c(3,4.5,1.5,2))
plot(date_MSFT, MSFT.ret[3:n_MSFT], type='l',col='blue',xaxt = 'n', xlab= "",ylab="", xlim=c(1,n1), ylim=c(-.15,.15))
axis(1, at=date_i_MSFT, labels=lab_x_MSFT)
a1_ci <- c(alpha1_est-1.96*sd_alpha1, alpha1_est+1.96*sd_alpha1,)
a1_ci <- c(alpha1_est-1.96*sd_alpha1, alpha1_est+1.96*sd_alpha1)
a1_ci
# GARCH(1,1) with GSPC
garch_AP  <- garch(GSPC.ret, order = c(1,1))
n  = dim(MSFT.ret)[1]
n0 = n-1
summary(garch_AP)
attach(garch_AP)
# The estimation results are in garch_AP
# coef: contains the estimators of omega, alpha1 and beta1
# vcov: contains the variance estimators of the estimators of omega, alpha1 and beta1
# fitted.values: contains the fitted conditioinal standard deviation sigma_t
# residuals: contains the fitted residuals for e_t
omega_est  = coef[1]                   # estimator of omega
sd_omega   = vcov[1,1]^.5              # standard deviation estimator of the estimator of omega
alpha1_est = coef[2]                   # estimator of alpha1
sd_alpha1  = vcov[2,2]^.5              # standard deviation estimator of the estimator of alpha1
beta1_est  = coef[3]                   # estimator of beta1
sd_beta1   = vcov[3,3]^.5              # standard deviation estimator of the estimator of beta1
sig        = fitted.values[2:n0,c(1)]  # fitted conditioinal standard deviation sigma_t
rsd        = residuals[2:n0]           # fitted residuals for e_t
fit.r      = sig*rsd                   # fitted cc return for r_t
n1         = n0-1
date       = 1:n1
date_i     = seq(from = 1, to = n0, by = 250)
lab_x      = seq(from = 2000, to = 2014, by = 1)
# plot the real cc return and the fitted cc return
par(mfrow=c(2,1))
par(mar = c(3,4.5,1.5,2))
plot(date, GSPC.ret[3:n], type='l',col='blue',xaxt = 'n', xlab= "",ylab="", xlim=c(1,n1), ylim=c(-.1,.1))
axis(1, at=date_i, labels=lab_x)
title('Real Data (GSPC)')
plot(date,fit.r, type='l',col='green',xaxt = 'n', xlab= "",ylab="", xlim=c(1,n1), ylim=c(-.1,.1))
axis(1, at=date_i, labels=lab_x)
title('Fitted Data (GSPC)')
a1_ci
a1_ci <- c(alpha1_est-1.96*sd_alpha1, alpha1_est+1.96*sd_alpha1)
garch_AP  <- garch(MSFT.ret, order = c(1,1))
n  = dim(MSFT.ret)[1]
n0 = n-1
summary(garch_AP)
attach(garch_AP)
omega_est  = coef[1]                   # estimator of omega
sd_omega   = vcov[1,1]^.5              # standard deviation estimator of the estimator of omega
alpha1_est = coef[2]                   # estimator of alpha1
sd_alpha1  = vcov[2,2]^.5              # standard deviation estimator of the estimator of alpha1
beta1_est  = coef[3]                   # estimator of beta1
sd_beta1   = vcov[3,3]^.5              # standard deviation estimator of the estimator of beta1
sig        = fitted.values[2:n0,c(1)]  # fitted conditioinal standard deviation sigma_t
rsd        = residuals[2:n0]           # fitted residuals for e_t
fit.r      = sig*rsd                   # fitted cc return for r_t
n1         = n0-1
date       = 1:n1
date_i     = seq(from = 1, to = n0, by = 250)
lab_x      = seq(from = 2000, to = 2014, by = 1)
# plot the real cc return and the fitted cc return
par(mfrow=c(2,1))
par(mar = c(3,4.5,1.5,2))
plot(date, MSFT.ret[3:n], type='l',col='blue',xaxt = 'n', xlab= "",ylab="", xlim=c(1,n1), ylim=c(-.15,.15))
axis(1, at=date_i, labels=lab_x)
title('Real Data (MSFT)')
plot(date,fit.r, type='l',col='green',xaxt = 'n', xlab= "",ylab="", xlim=c(1,n1), ylim=c(-.15,.15))
axis(1, at=date_i, labels=lab_x)
title('Fitted Data (MSFT)')
a1_ci <- c(alpha1_est-1.96*sd_alpha1, alpha1_est+1.96*sd_alpha1)
a1_ci
b1_ci <- c(beta1_est-1.96*sd_beta1, beta1_est+1.96*sd_beta1)
b1_ci
# Test a1
(alpha1_est-0)/sd_alpha1
# Test b1
(beta1_est-0.9)/sd_beta1
garch_AP  <- garch(MSFT.ret, order = c(1,1))
n  = dim(MSFT.ret)[1]
n0 = n-1
summary(garch_AP)
attach(garch_AP)
omega_est  = coef[1]                   # estimator of omega
sd_omega   = vcov[1,1]^.5              # standard deviation estimator of the estimator of omega
alpha1_est = coef[2]                   # estimator of alpha1
sd_alpha1  = vcov[2,2]^.5              # standard deviation estimator of the estimator of alpha1
beta1_est  = coef[3]                   # estimator of beta1
sd_beta1   = vcov[3,3]^.5              # standard deviation estimator of the estimator of beta1
sig        = fitted.values[2:n0,c(1)]  # fitted conditioinal standard deviation sigma_t
rsd        = residuals[2:n0]           # fitted residuals for e_t
fit.r      = sig*rsd                   # fitted cc return for r_t
n1         = n0-1
date       = 1:n1
date_i     = seq(from = 1, to = n0, by = 250)
lab_x      = seq(from = 2000, to = 2014, by = 1)
a1_ci <- c(alpha1_est-1.96*sd_alpha1, alpha1_est+1.96*sd_alpha1)
a1_ci
b1_ci <- c(beta1_est-1.96*sd_beta1, beta1_est+1.96*sd_beta1)
b1_ci
# Test a1
(alpha1_est-0)/sd_alpha1
# Test b1
(beta1_est-0.9)/sd_beta1
garch_AP  <- garch(GSPC.ret, order = c(1,1))
n  = dim(MSFT.ret)[1]
n0 = n-1
summary(garch_AP)
attach(garch_AP)
# The estimation results are in garch_AP
# coef: contains the estimators of omega, alpha1 and beta1
# vcov: contains the variance estimators of the estimators of omega, alpha1 and beta1
# fitted.values: contains the fitted conditioinal standard deviation sigma_t
# residuals: contains the fitted residuals for e_t
omega_est  = coef[1]                   # estimator of omega
sd_omega   = vcov[1,1]^.5              # standard deviation estimator of the estimator of omega
alpha1_est = coef[2]                   # estimator of alpha1
sd_alpha1  = vcov[2,2]^.5              # standard deviation estimator of the estimator of alpha1
beta1_est  = coef[3]                   # estimator of beta1
sd_beta1   = vcov[3,3]^.5              # standard deviation estimator of the estimator of beta1
sig        = fitted.values[2:n0,c(1)]  # fitted conditioinal standard deviation sigma_t
rsd        = residuals[2:n0]           # fitted residuals for e_t
fit.r      = sig*rsd                   # fitted cc return for r_t
n1         = n0-1
date       = 1:n1
date_i     = seq(from = 1, to = n0, by = 250)
lab_x      = seq(from = 2000, to = 2014, by = 1)
a1_ci <- c(alpha1_est-1.96*sd_alpha1, alpha1_est+1.96*sd_alpha1)
a1_ci
b1_ci <- c(beta1_est-1.96*sd_beta1, beta1_est+1.96*sd_beta1)
b1_ci
# Test a1
(alpha1_est-0)/sd_alpha1
# Test b1
(beta1_est-0.9)/sd_beta1
# Test b1
(beta1_est-0.9)/sd_beta1
